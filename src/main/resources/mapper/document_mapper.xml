<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ko.gagu.issue.dao.DocumentDAO">
	<!-- [jeong] 문서 양식 번호를 입력하면 해당 양식의 파일 경로를 조회 -->
	<select id="getFormSrc" resultType="String">
		SELECT file_name AS fileName FROM filestore_tb ft WHERE idx_filetype = 5 AND idx_ref = #{form_name};
	</select>
	
	<!-- [jeong] 임시로 직원의 정보를 불러옴 무조건 지워야함!!! -->
	<select id="getEmployeeInfo" resultType="employee">
		SELECT 
			*,
			(SELECT de_name FROM department_tb d WHERE d.idx_department = e.idx_department) AS de_name,
			(SELECT title_name FROM title_tb t WHERE t.idx_title = e.idx_title) AS title_name
		FROM employee_tb e WHERE idx_employee = #{idx_employee}
	</select>
	
	<!-- [jeong] 문서의 작성자와 양식 번호 내용을 approval 테이블에 저장 -->
	<insert id="saveDocument" useGeneratedKeys="true"
		keyColumn="idx_approval"
		keyProperty="idx_approval"
		parameterType="document">
		INSERT INTO approval_tb (idx_employee, idx_dc, ap_content) 
			VALUES (#{idx_employee}, #{idx_dc}, #{ap_content})
	</insert>
	
	<!-- [jeong] 작성한 문서의 첨부파일을 파일 저장소에 저장함 -->
	<insert id="saveAttachmentFile">
		INSERT INTO filestore_tb (idx_filetype, idx_ref, origin_name, file_name)
			VALUES (#{idx_filetype}, #{idx_ref}, #{origin_name}, #{file_name})
	</insert>	

	<!-- [jeong] 문서의 작성자와 양식 번호 내용을 approval 테이블에 저장 -->
	<insert id="saveApprovalLine">
		INSERT INTO approval_line_tb (idx_approval, idx_employee, sequence) 
			VALUES (#{idx_approval}, #{idx_employee}, #{sequence})
	</insert>
	
	<!-- [jeong] 작성한 문서의 파일 이름을 filestore 테이블에 저장 -->
	<insert id="saveDocumentFile">
		INSERT INTO filestore_tb (idx_filetype, idx_ref, file_name)
			VALUES (#{idx_filetype}, #{idx_ref}, #{file_name})
	</insert>
	
	<!-- [jeong] jstree 에서 사용할 조직도를 조회 -->
	<select id="getOrganization" resultType="map">
		SELECT 
		    'employee' AS type,
		    et.idx_employee AS id, 
		    CASE 
		        WHEN root.de_name IS NULL THEN 'gaguissue'
		        ELSE node.de_name 
		    END AS parent, 
		    CONCAT(tt.title_name, '|', et.emp_name) AS text,
		    et.emp_name AS name,
		    node.de_name AS department, 
		    tt.title_name AS title
		FROM employee_tb et 
		JOIN organization_tb ot ON et.idx_department = ot.depart_idx
		JOIN department_tb node ON node.idx_department = ot.depart_idx 
		LEFT JOIN department_tb root ON root.idx_department = ot.root_depart_idx
		JOIN title_tb tt ON tt.idx_title = et.idx_title
			UNION ALL
		SELECT 
		    'department' AS type,
		    dt.de_name AS id, 
		    'gaguissue' AS parent, 
		    dt.de_name AS text,
		    NULL AS name,
		    NULL AS department,   
		    NULL AS title         
		FROM department_tb dt 
		WHERE dt.idx_department IN (2,3,4)
	</select>
	
	<!-- [jeong] 해당 문서에 접근할 권한(작성자, 결재권자, 부서원)이 무엇인지 그리고 결재 순서가 몇번인지 알려줌 -->
	<select id="getApproval" resultType="approval">
		SELECT
			att.idx_approval AS idxApproval,
			att.idx_employee AS idxEmployee,
			att.idx_dc AS idxDc,
			att.final_ap_status AS finalApStatus,
			att.ap_content AS apContent,
			att.written_datetime AS writtenDatetime,
			et.idx_employee AS accessIdxEmployee,
			CASE
				WHEN et.idx_employee = att.idx_employee THEN '작성자'
				WHEN alt.idx_employee IS NOT NULL THEN '결재권자'
				WHEN et.idx_department = (SELECT idx_department FROM employee_tb WHERE idx_employee = att.idx_employee) IS NOT NULL THEN '같은부서원'
				ELSE '접근불가'
			END AS accessPermission,
			CASE 
				WHEN alt.idx_employee IS NOT NULL THEN alt.sequence
				ELSE NULL
			END AS approvalSequence
		FROM approval_tb att
			LEFT JOIN employee_tb et ON et.idx_employee = #{accessIdxEmployee}
			LEFT JOIN approval_line_tb alt ON alt.idx_approval = att.idx_approval AND alt.idx_employee = et.idx_employee
		WHERE att.idx_approval = #{idxApproval}
	</select>	
	
	<!-- [jeong] 해당 문서의 관련된 모든파일(문서, 첨부파일)들을 가져옴 -->
	<select id="getDocumentFiles">
		SELECT 
			ft.idx_file AS idxFile,
			ft.idx_filetype AS idxFiletype,
			ft.upload_datetime AS uploadDatetime,
			ft.origin_name AS orginName,
			ft.file_name AS fileName
		FROM filestore_tb ft 
		WHERE ft.idx_ref = #{idxApproval} AND (ft.idx_filetype = 4 OR ft.idx_filetype = 8)
	</select>
	
	<!-- [jeong] 해당 문서의 결재 라인의 데이터를 가져옴 -->
	<select id="getApprovalLineList">
		SELECT
			alt.idx_employee AS idxEmployee,
			alt.sequence AS sequence,
			alt.ap_comment AS apComment,
			alt.approval_datetime AS approvalDatetime
		FROM approval_line_tb alt WHERE alt.idx_approval = #{idxApproval};
	</select>
</mapper>