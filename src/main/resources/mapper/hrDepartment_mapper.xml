<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="ko.gagu.issue.dao.HRDepartmentDAO">
	
	<select id="getAllCompanyEvents" resultType="HRDept">
		SELECT * FROM company_calendar_tb WHERE cc_status='SHOW'
	</select>
	
	<insert id="companyAddEvent" parameterType="HRDept">
		INSERT INTO company_calendar_tb 
			(cc_title,cc_description,cc_start_datetime,cc_end_datetime,cc_color)
		VALUES (#{cc_title},#{cc_description},#{cc_start_datetime},#{cc_end_datetime},'#7a70ba')
	</insert>
	
	<update id="updateCompanyEvent">
		UPDATE company_calendar_tb SET
			cc_title=#{param2},
			cc_start_datetime=#{param3},
			cc_end_datetime=#{param4},
			cc_description=#{param5},
			cc_color=#{param6}
		WHERE idx_company_calendar=#{param1}
	</update>
	
	<update id="deleteCompanyEvent">
		UPDATE company_calendar_tb SET cc_status='BLIND' WHERE idx_company_calendar=#{param1}
	</update>
	
	<select id="getAllEmployees" resultType="ko.gagu.issue.dto.HRDepartmentDTO">
        SELECT e.emp_id, e.emp_name, d.de_name
        FROM employee_tb e
        JOIN department_tb d ON e.idx_department = d.idx_department
    </select>
    
   
	
	<insert id="createEmployee" useGeneratedKeys="true" keyColumn="idx_employee" keyProperty="idx_employee" parameterType="ko.gagu.issue.dto.HRDepartmentDTO">
	    
	    INSERT INTO employee_tb (
	        emp_name, emp_phone_number, emp_birth_date, emp_email, emp_address, 
	        emp_id, emp_pw, idx_department, idx_title
	    )
	    VALUES (
	        #{emp_name}, #{emp_phone_number}, #{emp_birth_date}, #{emp_email}, #{emp_address},
	        CONCAT(
	            SUBSTR(CURDATE(), 3, 2), 
	            SUBSTR(CURDATE(), 6, 2), 
	            SUBSTR(CURDATE(), 9, 2), 
	            (SELECT de_char FROM department_tb WHERE de_name = #{de_name}), 
	            RIGHT(CONCAT('0000', (SELECT et.idx_employee + 1 FROM employee_tb et ORDER BY et.idx_employee DESC LIMIT 1)), 5)
	        ),
	        #{emp_pw}, 
	        (SELECT idx_department 
	         FROM department_tb 
	         WHERE de_name = #{de_name}), 
	        (SELECT idx_title 
	         FROM title_tb 
	         WHERE title_name = #{title_name})
	    )
	    
	</insert>


	
	<insert id="insertLeaveAccruals" parameterType="ko.gagu.issue.dto.HRDepartmentDTO">
	    INSERT INTO leave_accruals_tb (idx_employee, leave_days)
	    VALUES (
	        #{idx_employee}, 
	        #{leave_days}
	    )
	</insert>
	
	<insert id="saveProfileImagePath">
	    INSERT INTO filestore_tb (idx_filetype, idx_ref, origin_name, file_name, upload_datetime)
	   		VALUES ('1',#{param3}, #{param1}, #{param2}, now())
	</insert>
		
	<select id="getnewIdx" resultType="String">
		SELECT
			RIGHT(CONCAT('0000', (SELECT et.idx_employee + 1 FROM employee_tb et ORDER BY et.idx_employee DESC LIMIT 1)), 5)
	</select>
	
	 <select id="getEmployeeById" parameterType="string" resultType="ko.gagu.issue.dto.HRDepartmentDTO">
	    SELECT 
	        e.emp_id,
	        e.emp_name,
	        e.emp_phone_number,
	        e.emp_birth_date,
	        e.emp_email,
	        e.emp_pw,
	        d.de_name,
	        e.emp_status,
	        e.emp_hire_date,
	        e.emp_term_date,
	        t.title_name,
	        la.leave_days,
	        e.emp_address,
	        COALESCE(ft.file_name, 'user.jpg') as photo_url
	    FROM 
	        employee_tb e
	    JOIN 
	        department_tb d ON e.idx_department = d.idx_department
	    JOIN 
	        title_tb t ON e.idx_title = t.idx_title
	    LEFT JOIN 
	        leave_accruals_tb la ON e.idx_employee = la.idx_employee
	    LEFT JOIN
	        filestore_tb ft ON e.idx_employee = ft.idx_ref AND ft.idx_filetype = 1
	    WHERE 
	        e.emp_id = #{emp_id}
	</select>
	
	<select id="isEmpty" resultType="Integer">
		select count(*) from employee_tb where emp_id = #{param1}
	</select>
	
	<select id="getAnnualLeaveInfoById" parameterType="string" resultType="ko.gagu.issue.dto.HRDepartmentDTO">
			SELECT 
			e.idx_employee,
            e.emp_id,
            e.emp_name,
            e.emp_phone_number,
            e.emp_birth_date,
            e.emp_email,
            e.emp_address,
            la.leave_days,
            la.usage_days,
            lu.lu_start_date,
            lu.lu_end_date,
            lu.lu_usage_days,
            COALESCE(ft.file_name, 'user.jpg') as photo_url
        FROM 
            employee_tb e
        LEFT JOIN 
            leave_accruals_tb la ON e.idx_employee = la.idx_employee
        LEFT JOIN 
            leave_usage_tb lu ON e.idx_employee = lu.idx_employee
        LEFT JOIN
     filestore_tb ft ON e.idx_employee = ft.idx_ref AND ft.idx_filetype = 1
        WHERE 
            e.emp_id = #{emp_id}
            LIMIT 1
	</select>
	
	<select id="gethistory" resultType="ko.gagu.issue.dto.Leave_usage_tbDTO">
			SELECT 
			
           lu_start_date,
           lu_end_date,
           lu_usage_days
        FROM 
            leave_usage_tb
        
        WHERE 
            idx_employee = #{param1}
	</select>
	
	<select id="searchEmployee" parameterType="map" resultType="ko.gagu.issue.dto.HRDepartmentDTO">
	    SELECT 
	        e.emp_id,
	        e.emp_name,
	        e.emp_phone_number,
	        e.emp_birth_date,
	        e.emp_email,
	        e.emp_address,
	        d.de_name
	    FROM 
	        employee_tb e
	    JOIN 
	        department_tb d ON e.idx_department = d.idx_department
	    WHERE 
	        (e.emp_id LIKE CONCAT('%', #{searchInput}, '%') 
	        OR e.emp_name LIKE CONCAT('%', #{searchInput}, '%'))
	    AND 
	        (#{department} = '전체' OR d.de_name = #{department})
	</select>
	
	<update id="updateEmployee" parameterType="ko.gagu.issue.dto.HRDepartmentDTO">
        UPDATE employee_tb SET
            emp_name = #{emp_name},
            emp_phone_number = #{emp_phone_number},
            emp_birth_date = #{emp_birth_date},
            emp_email = #{emp_email},
            emp_address = #{emp_address},
            emp_pw = #{emp_pw},
            idx_department = (SELECT idx_department FROM department_tb WHERE de_name = #{de_name}),
            idx_title = (SELECT idx_title FROM title_tb WHERE title_name = #{title_name}),
            emp_status = #{emp_status}
        WHERE emp_id = #{emp_id}
    </update>
	

	<select id="departmentAttendanceList" resultType="employee">
		SELECT
			ah.idx_attendance,
	        ah.idx_employee,
	        ah.ah_date,
	        ah.ah_check_in,
	        ah.ah_check_out,
	        ah.ah_status,
	        et.idx_department,
	        et.emp_name,
	        et.emp_status
		FROM attendance_history_tb ah
	    JOIN employee_tb et ON ah.idx_employee = et.idx_employee
	    JOIN department_tb dt ON et.idx_department = dt.idx_department
	    WHERE dt.de_name = #{param4} AND ah.ah_date=#{param1} AND et.emp_status='재직'
	    LIMIT 15 OFFSET #{param2}
	</select>
	
	<select id="allCountPage" resultType="Object">
		SELECT CEIL(COUNT(ah.idx_attendance) / #{param3}) AS pages
		FROM attendance_history_tb ah
	    JOIN employee_tb et ON ah.idx_employee = et.idx_employee
	    JOIN department_tb dt ON et.idx_department = dt.idx_department
		WHERE ah.ah_date=#{param2} AND dt.de_name=#{param1}
		ORDER BY ah.idx_employee DESC
	</select>
	
	
</mapper>
